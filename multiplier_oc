
entity SMP_8BM is
port (
        x: in  std_logic_vector (7 downto 0);
        y: in  std_logic_vector (7 downto 0);
        p: out std_logic_vector (15 downto 0)
    );
end entity SMP_8BM;

architecture Behavioral of SMP_8BM is

component SMP_8BA
        Port ( A : in STD_LOGIC_VECTOR (7 downto 0);
        B : in STD_LOGIC_VECTOR (7 downto 0);
        Cin : in STD_LOGIC;
        S : out STD_LOGIC_VECTOR (7 downto 0);
        Cout : out STD_LOGIC);
    end component;

signal G0, G1, G2, G3, G4, G5, G6:  std_logic_vector (7 downto 0);

signal B0, B1, B2, B3, B4, B5, B6:  std_logic_vector (7 downto 0);

begin

G0 <= (x(7) and y(1), x(6) and y(1), x(5) and y(1), x(4) and y(1), x(3) and y(1), x(2) and y(1), x(0) and y(1));
    G1 <= (x(7) and y(2), x(6) and y(2), x(5) and y(2), x(4) and y(2), x(3) and y(2), x(2) and y(2), x(0) and y(2));
    G2 <= (x(7) and y(3), x(6) and y(3), x(5) and y(3), x(4) and y(3), x(3) and y(3), x(2) and y(3), x(0) and y(3));
    G3 <= (x(7) and y(4), x(6) and y(4), x(5) and y(4), x(4) and y(4), x(3) and y(4), x(2) and y(4), x(0) and y(4));
    G4 <= (x(7) and y(5), x(6) and y(5), x(5) and y(5), x(4) and y(5), x(3) and y(5), x(2) and y(5), x(0) and y(5));
    G5 <= (x(7) and y(6), x(6) and y(6), x(5) and y(6), x(4) and y(6), x(3) and y(6), x(2) and y(6), x(0) and y(6));
    G6 <= (x(7) and y(7), x(6) and y(7), x(5) and y(7), x(4) and y(7), x(3) and y(7), x(2) and y(7), x(0) and y(7));
    -- y(0) AND products (and y0(3) '0'):
    B0 <=  ('0',          x(7) and y(0), x(6) and y(0), x(5) and y(0), x(4) and y(0), x(3) and y(0), x(2) and y(0), x(0) and y(0));

cell_1: 
    SMP_8BA 
        port map (
            a => G0,
            b => B0,
            cin => '0',
            cout => B1(7), -- named association can be in any order
            S(7) => B1(6), -- individual elements of S, all are associated
            S(6) => B1(5), -- all formal members must be provide contiguously
            S(5) => B1(4),
            S(4) => B1(3), -- individual elements of S, all are associated
            S(3) => B1(2), -- all formal members must be provide contiguously
            S(2) => B1(1),
            S(1) => B1(0),
            S(0) => p(1)
        );


cell_2: 
    SMP_8BA 
        port map (
            a => G1,
            b => B1,
            cin => '0',
            cout => B2(7), -- named association can be in any order
            S(7) => B2(6), -- individual elements of S, all are associated
            S(6) => B2(5), -- all formal members must be provide contiguously
            S(5) => B2(4),
            S(4) => B2(3), -- individual elements of S, all are associated
            S(3) => B2(2), -- all formal members must be provide contiguously
            S(2) => B2(1),
            S(1) => B2(0),
            S(0) => p(2)
        );


cell_3: 
    SMP_8BA 
        port map (
            a => G2,
            b => B2,
            cin => '0',
            cout => B3(7), -- named association can be in any order
            S(7) => B3(6), -- individual elements of S, all are associated
            S(6) => B3(5), -- all formal members must be provide contiguously
            S(5) => B3(4),
            S(4) => B3(3), -- individual elements of S, all are associated
            S(3) => B3(2), -- all formal members must be provide contiguously
            S(2) => B3(1),
            S(1) => B3(0),
            S(0) => p(3)
        );


cell_4: 
    SMP_8BA 
        port map (
            a => G3,
            b => B3,
            cin => '0',
            cout => B4(7), -- named association can be in any order
            S(7) => B4(6), -- individual elements of S, all are associated
            S(6) => B4(5), -- all formal members must be provide contiguously
            S(5) => B4(4),
            S(4) => B4(3), -- individual elements of S, all are associated
            S(3) => B4(2), -- all formal members must be provide contiguously
            S(2) => B4(1),
            S(1) => B4(0),
            S(0) => p(4)
        );


cell_5: 
    SMP_8BA 
        port map (
            a => G4,
            b => B4,
            cin => '0',
            cout => B5(7), -- named association can be in any order
            S(7) => B5(6), -- individual elements of S, all are associated
            S(6) => B5(5), -- all formal members must be provide contiguously
            S(5) => B5(4),
            S(4) => B5(3), -- individual elements of S, all are associated
            S(3) => B5(2), -- all formal members must be provide contiguously
            S(2) => B5(1),
            S(1) => B5(0),
            S(0) => p(5)
        );
        
        
        
cell_6: 
    SMP_8BA 
        port map (
            a => G5,
            b => B5,
            cin => '0',
            cout => B6(7), -- named association can be in any order
            S(7) => B6(6), -- individual elements of S, all are associated
            S(6) => B6(5), -- all formal members must be provide contiguously
            S(5) => B6(4),
            S(4) => B6(3), -- individual elements of S, all are associated
            S(3) => B6(2), -- all formal members must be provide contiguously
            S(2) => B6(1),
            S(1) => B6(0),
            S(0) => p(6)
        );    
        

cell_7: 
    SMP_8BA 
        port map (
            a => G6,
            b => B6,
            cin => '0',
            cout => p(15),
            S => p(15 downto 7)  -- matching elements for formal
        );
    p(0) <= x(0) and y(0);     
end Behavioral;

